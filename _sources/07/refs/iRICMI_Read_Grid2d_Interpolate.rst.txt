.. _sec_ref_iRICMI_Read_Grid2d_Interpolate:

iRICMI_Read_Grid2d_Interpolate
==============================

Returns the information to interpolate the value at the specified coordinates, with the values defined at grid nodes.

Format (FORTRAN)
-----------------

.. code-block:: fortran

   call iRICMI_Read_Grid2d_Interpolate(grid_handle, x, y, ok, count, nodeids_arr, weights_arr, ier)

Format (C/C++)
-----------------

.. code-block:: c

   ier = iRICMI_Read_Grid2d_Interpolate(grid_handle, x, y, ok, count, nodeids_arr, weights_arr)

Format (Python)
-----------------

.. code-block:: python

   ok, count, nodeids_arr, weights_arr = iRICMI_Read_Grid2d_Interpolate(grid_handle, x, y)

Arguments and returned value
----------------------------

grid_handle
~~~~~~~~~~~

.. list-table:: Information about grid_handle
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - grid_handle
   * - I/O
     - Input

   * - Description
     - Grid handle
   * - Type (FORTRAN)
     - integer
   * - Type (C/C++)
     - int
   * - Type (Python)
     - int

x
~

.. list-table:: Information about x
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - x
   * - I/O
     - Input

   * - Description
     - The value of x coordinate
   * - Type (FORTRAN)
     - double precision
   * - Type (C/C++)
     - double
   * - Type (Python)
     - float

y
~

.. list-table:: Information about y
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - y
   * - I/O
     - Input

   * - Description
     - The value of y coordinate
   * - Type (FORTRAN)
     - double precision
   * - Type (C/C++)
     - double
   * - Type (Python)
     - float

ok
~~

.. list-table:: Information about ok
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - ok
   * - I/O
     - Output

   * - Description
     - 1 if a cell is found, 0 if not
   * - Type (FORTRAN)
     - integer
   * - Type (C/C++)
     - int*
   * - Type (Python)
     - int

count
~~~~~

.. list-table:: Information about count
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - count
   * - I/O
     - Output

   * - Description
     - The number of nodes of the cell (3 or 4)
   * - Type (FORTRAN)
     - integer
   * - Type (C/C++)
     - int*
   * - Type (Python)
     - int

nodeids_arr
~~~~~~~~~~~

.. list-table:: Information about nodeids_arr
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - nodeids_arr
   * - I/O
     - Output

   * - Description
     - Array of ID of the vertices of the cell
   * - Type (FORTRAN)
     - integer
   * - Type (C/C++)
     - int*
   * - Type (Python)
     - int

weights_arr
~~~~~~~~~~~

.. list-table:: Information about weights_arr
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - weights_arr
   * - I/O
     - Output

   * - Description
     - Array of weights values to interpolate the value at the coordinates from the those defined at cell vertices
   * - Type (FORTRAN)
     - double precision
   * - Type (C/C++)
     - double*
   * - Type (Python)
     - float

ier
~~~

.. list-table:: Information about ier
   :header-rows: 1

   * - Item
     - Value
   * - Name
     - ier
   * - I/O
     - Output

   * - Description
     - Error code. If an error occured, the value is not 0.
   * - Type (FORTRAN)
     - integer
   * - Type (C/C++)
     - int
   * - Type (Python)
     - (not defined)
